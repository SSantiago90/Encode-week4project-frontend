{
  "address": "0x5245f64BDb9C61E1BbEE06bf8EF6B5E6A27Ea267",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_proposalNames",
          "type": "bytes32[]"
        },
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_targetBlockNumber",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "getVotePower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "votePower_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "spentVotePower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetBlockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenContract",
      "outputs": [
        {
          "internalType": "contract IMyToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winnerName",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "winnerName_",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winningProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "winningProposal_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb4caa520dee2b11eac87cc0aca1e1703eb4ff36e47d20468012942ab9ce0c4f4",
  "receipt": {
    "to": null,
    "from": "0xea17C45EC037D305bC4148f1fc64A27Cb8B0cfED",
    "contractAddress": "0x5245f64BDb9C61E1BbEE06bf8EF6B5E6A27Ea267",
    "transactionIndex": 83,
    "gasUsed": "470119",
    "logsBloom": "0x
    "blockHash": "0xfc760f88cbe4d2c6d8afc7d1aab58d8a913a0c9ff4d062336ae7ceb425247105",
    "transactionHash": "0xb4caa520dee2b11eac87cc0aca1e1703eb4ff36e47d20468012942ab9ce0c4f4",
    "logs": [],
    "blockNumber": 6609104,
    "cumulativeGasUsed": "8430888",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0x50726f706f73616c203100000000000000000000000000000000000000000000",
      "0x50726f706f73616c203200000000000000000000000000000000000000000000",
      "0x50726f706f73616c203300000000000000000000000000000000000000000000"
    ],
    "0x672098733426BA420EB39B0290e2B2555bb59403",
    1561651651
  ],
  "numDeployments": 2,
  "solcInputHash": "1fe1d9ea21cebc6ac36a6073b1eb8713",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_proposalNames\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_targetBlockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getVotePower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"votePower_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"spentVotePower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"internalType\":\"contract IMyToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerName\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"winnerName_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winningProposal_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenizedBallot.sol\":\"TokenizedBallot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TokenizedBallot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.7.0 <0.9.0;\\r\\n\\r\\ninterface IMyToken {\\r\\n    function getPastVotes(address, uint256) external view returns (uint256);\\r\\n}\\r\\n\\r\\ncontract TokenizedBallot {\\r\\n    struct Proposal {\\r\\n        bytes32 name;\\r\\n        uint voteCount;\\r\\n    }\\r\\n\\r\\n    IMyToken public tokenContract;\\r\\n    Proposal[] public proposals;\\r\\n    uint256 public targetBlockNumber;\\r\\n    mapping(address => uint256) public spentVotePower;\\r\\n\\r\\n    constructor(\\r\\n        bytes32[] memory _proposalNames,\\r\\n        address _tokenContract,\\r\\n        uint256 _targetBlockNumber\\r\\n    ) {\\r\\n        tokenContract = IMyToken(_tokenContract);\\r\\n        targetBlockNumber = _targetBlockNumber;\\r\\n\\r\\n        require(\\r\\n            targetBlockNumber > block.number,\\r\\n            \\\"Target block must be in the future\\\"\\r\\n        );\\r\\n\\r\\n        for (uint i = 0; i < _proposalNames.length; i++) {\\r\\n            proposals.push(Proposal({name: _proposalNames[i], voteCount: 0}));\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function vote(uint256 proposal, uint256 amount) external {\\r\\n        // Get voting power\\r\\n        uint256 votePower = getVotePower(msg.sender);\\r\\n\\r\\n        // Verify that the sender has enough voting power\\r\\n        require(\\r\\n            votePower >= amount,\\r\\n            \\\"TokenizedBallot: Insufficient voting power\\\"\\r\\n        );\\r\\n        spentVotePower[msg.sender] += amount;\\r\\n        proposals[proposal].voteCount += amount;\\r\\n    }\\r\\n\\r\\n    function getVotePower(\\r\\n        address voter\\r\\n    ) public view returns (uint256 votePower_) {\\r\\n        // Get past votes at the target block number\\r\\n        votePower_ = tokenContract.getPastVotes(voter, targetBlockNumber - 1); // (-1) to Avoid ERC5805FutureLookup\\r\\n\\r\\n        // Subtract the votes that have already been spent\\r\\n        votePower_ -= spentVotePower[voter];\\r\\n    }\\r\\n\\r\\n    function winningProposal() public view returns (uint winningProposal_) {\\r\\n        uint winningVoteCount = 0;\\r\\n        for (uint p = 0; p < proposals.length; p++) {\\r\\n            if (proposals[p].voteCount > winningVoteCount) {\\r\\n                winningVoteCount = proposals[p].voteCount;\\r\\n                winningProposal_ = p;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function winnerName() external view returns (bytes32 winnerName_) {\\r\\n        winnerName_ = proposals[winningProposal()].name;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa7be7b7e62414ea71349677ae24d969f2ea68fee12451a1344bc7adca153ee4f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161071c38038061071c83398101604081905261002f91610153565b600080546001600160a01b0319166001600160a01b03841617905560028190554381116100ad5760405162461bcd60e51b815260206004820152602260248201527f54617267657420626c6f636b206d75737420626520696e207468652066757475604482015261726560f01b606482015260840160405180910390fd5b60005b835181101561011857600160405180604001604052808684815181106100d8576100d861022b565b60209081029190910181015182526000918101829052835460018181018655948352918190208351600290930201918255919091015190820155016100b0565b50505050610241565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b038116811461014e57600080fd5b919050565b60008060006060848603121561016857600080fd5b83516001600160401b038082111561017f57600080fd5b818601915086601f83011261019357600080fd5b81516020828211156101a7576101a7610121565b8160051b604051601f19603f830116810181811086821117156101cc576101cc610121565b60405292835281830193508481018201928a8411156101ea57600080fd5b948201945b83861015610208578551855294820194938201936101ef565b97506102179050888201610137565b955050505050604084015190509250925092565b634e487b7160e01b600052603260045260246000fd5b6104cc806102506000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063609ff1bd1161005b578063609ff1bd1461011c578063b384abef14610124578063bb9c092014610139578063e2ba53f01461014c57600080fd5b8063013cf08b1461008d5780632a8cd29e146100ba57806346a38bc8146100d157806355a373d6146100f1575b600080fd5b6100a061009b3660046103c0565b610154565b604080519283526020830191909152015b60405180910390f35b6100c360025481565b6040519081526020016100b1565b6100c36100df3660046103d9565b60036020526000908152604090205481565b600054610104906001600160a01b031681565b6040516001600160a01b0390911681526020016100b1565b6100c3610182565b610137610132366004610409565b6101f5565b005b6100c36101473660046103d9565b6102cd565b6100c361038d565b6001818154811061016457600080fd5b60009182526020909120600290910201805460019091015490915082565b600080805b6001548110156101f05781600182815481106101a5576101a561042b565b90600052602060002090600202016001015411156101e857600181815481106101d0576101d061042b565b90600052602060002090600202016001015491508092505b600101610187565b505090565b6000610200336102cd565b9050818110156102695760405162461bcd60e51b815260206004820152602a60248201527f546f6b656e697a656442616c6c6f743a20496e73756666696369656e7420766f6044820152693a34b733903837bbb2b960b11b606482015260840160405180910390fd5b3360009081526003602052604081208054849290610288908490610457565b9250508190555081600184815481106102a3576102a361042b565b906000526020600020906002020160010160008282546102c39190610457565b9091555050505050565b600080546002546001600160a01b0390911690633a46b1a89084906102f49060019061046a565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa15801561033d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610361919061047d565b6001600160a01b038316600090815260036020526040902054909150610387908261046a565b92915050565b60006001610399610182565b815481106103a9576103a961042b565b906000526020600020906002020160000154905090565b6000602082840312156103d257600080fd5b5035919050565b6000602082840312156103eb57600080fd5b81356001600160a01b038116811461040257600080fd5b9392505050565b6000806040838503121561041c57600080fd5b50508035926020909101359150565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561038757610387610441565b8181038181111561038757610387610441565b60006020828403121561048f57600080fd5b505191905056fea2646970667358221220fd8e4ff24de2fffa78d354cf59abf1426234a6e5c30e1e9a3892bddbae6b474664736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063609ff1bd1161005b578063609ff1bd1461011c578063b384abef14610124578063bb9c092014610139578063e2ba53f01461014c57600080fd5b8063013cf08b1461008d5780632a8cd29e146100ba57806346a38bc8146100d157806355a373d6146100f1575b600080fd5b6100a061009b3660046103c0565b610154565b604080519283526020830191909152015b60405180910390f35b6100c360025481565b6040519081526020016100b1565b6100c36100df3660046103d9565b60036020526000908152604090205481565b600054610104906001600160a01b031681565b6040516001600160a01b0390911681526020016100b1565b6100c3610182565b610137610132366004610409565b6101f5565b005b6100c36101473660046103d9565b6102cd565b6100c361038d565b6001818154811061016457600080fd5b60009182526020909120600290910201805460019091015490915082565b600080805b6001548110156101f05781600182815481106101a5576101a561042b565b90600052602060002090600202016001015411156101e857600181815481106101d0576101d061042b565b90600052602060002090600202016001015491508092505b600101610187565b505090565b6000610200336102cd565b9050818110156102695760405162461bcd60e51b815260206004820152602a60248201527f546f6b656e697a656442616c6c6f743a20496e73756666696369656e7420766f6044820152693a34b733903837bbb2b960b11b606482015260840160405180910390fd5b3360009081526003602052604081208054849290610288908490610457565b9250508190555081600184815481106102a3576102a361042b565b906000526020600020906002020160010160008282546102c39190610457565b9091555050505050565b600080546002546001600160a01b0390911690633a46b1a89084906102f49060019061046a565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa15801561033d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610361919061047d565b6001600160a01b038316600090815260036020526040902054909150610387908261046a565b92915050565b60006001610399610182565b815481106103a9576103a961042b565b906000526020600020906002020160000154905090565b6000602082840312156103d257600080fd5b5035919050565b6000602082840312156103eb57600080fd5b81356001600160a01b038116811461040257600080fd5b9392505050565b6000806040838503121561041c57600080fd5b50508035926020909101359150565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561038757610387610441565b8181038181111561038757610387610441565b60006020828403121561048f57600080fd5b505191905056fea2646970667358221220fd8e4ff24de2fffa78d354cf59abf1426234a6e5c30e1e9a3892bddbae6b474664736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8410,
        "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
        "label": "tokenContract",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IMyToken)8402"
      },
      {
        "astId": 8414,
        "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
        "label": "proposals",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Proposal)8407_storage)dyn_storage"
      },
      {
        "astId": 8416,
        "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
        "label": "targetBlockNumber",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 8420,
        "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
        "label": "spentVotePower",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Proposal)8407_storage)dyn_storage": {
        "base": "t_struct(Proposal)8407_storage",
        "encoding": "dynamic_array",
        "label": "struct TokenizedBallot.Proposal[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IMyToken)8402": {
        "encoding": "inplace",
        "label": "contract IMyToken",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Proposal)8407_storage": {
        "encoding": "inplace",
        "label": "struct TokenizedBallot.Proposal",
        "members": [
          {
            "astId": 8404,
            "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 8406,
            "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
            "label": "voteCount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}